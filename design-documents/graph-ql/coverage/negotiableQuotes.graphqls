type Mutation {
    createNegotiableQuote(
        cart_id: ID! @doc(description: "Cart ID")
        quote_name: String @doc(description: "Quote name")
        comment: String @doc(description: "Comment")
        files: [FileInput!] @doc(description: "Attached files")
    ): RequestNegotiableQuoteOutput! @doc(description:"Generates negotiable quote request")

    setShippingMethodsOnNegotiableQuote(
        cart_id: ID! @doc(description: "Cart ID")
        shipping_methods: [String!]! @doc(description: "Input for shipping method")
    ): SetShippingMethodsOnNegotiableQuoteOutput @doc(description:"Set negotiable quote shipping method")
}

type Customer {
    negotiable_quote (
        id: ID!): NegotiableQuote @doc(description: "Get negotiable quote of a customer")

    negotiable_quotes(
        page_size: Int = 20,
        current_page: Int = 1,
        filter: NegotiableQuoteFilterInput
    ): [NegotiableQuote] @doc(description: "Get negotiable quotes of a customer")

    estimateShippingCostForNegotiableQuote(
        address: NegotiableQuoteShippingAddressInput!
    ): [ShippingMethodsOutput]! @doc(description:"Estimate shipping costs for a negotiable quote")

    estimateShippingCostByAddressIdForNegotiableQuote(
        address_id: String!
    ): [ShippingMethodsOutput]! @doc(description:"Estimate shipping costs for a negotiable quote by Address ID")
}

type NegotiableQuote {
    quote_id: ID!  @doc(description: "Negotiable quote ID")
    items: [NegotiableQuoteItem] @doc(description: "Negotiable quote item")
    attachements: [AttachmentContent] @doc(description: "Negotiable quote Attachements")
    comments: [NegotiableQuoteComment] @doc(description: "Negotiable quote comments")
    totals: TotalsOutput! @doc(description: "Negotiable quote totals output")
    payment_info: NegotiableQuotePaymentInfo! @doc(description: "Negotiable quote payment info.")
    available_shipping_methods: [ShippingMethodsOutput]! @doc(description: "Available shipping methods")
}

input NegotiableQuoteFilterInput {
    ids: FilterEqualTypeInput @doc(description: "Filter Customer Negotiable quotes with an negotiable quote ID or list of negotiable quote IDs")
    name: FilterMatchTypeInput @doc(description: "Filter by display name of the negotiable quote")
}

type NegotiableQuoteItem {
    id: ID!
    quantity: Float!
    product: ProductInterface!
}

type AttachmentContent @doc(description: "Negotiable quote attachment file") {
    base64_encoded_data: String!
    mime_type: String!
    name: String!
}

type NegotiableQuoteComment {
    entity_id: ID!
    parent_id: ID!
    creator_type: Int
    is_decline: Int
    is_draft: Int
    creator_id: ID!
    comment: String
    created_at: String
    attachments: [NegotiableQuoteCommentAttachments]
}

type NegotiableQuoteCommentAttachments {
    attachment_id: ID!
    comment_id: ID
    file_name: String
    file_path: String
    file_type: String
}

type NegotiableQuotePaymentInfo {
    payment_methods: [PaymentMethodsOutput]! @doc(description: "All list of payment options and totals")
    totals: TotalsOutput! @doc(description: "List of totals")
}

type PaymentMethodsOutput {
    code: String @doc(description: "Payment method code")
    title: String @doc(description: "Payment method title")
}

type TotalsOutput {
    grand_total: Money
    subtotal_including_tax: Money
    subtotal_excluding_tax: Money
    discount: CartDiscount
    subtotal_with_discount_excluding_tax: Money
    applied_taxes: [CartTaxItem]
}

type CartTaxItem {
    amount: Money!
    label: String!
}

type CartDiscount {
    amount: Money!
    label: [String!]!
}

type RequestNegotiableQuoteOutput {
    negotiable_quote:NegotiableQuote!
}

input FileInput @doc(description: "The list of file attachment codes") {
    base64_encoded_data: String!
    mime_type: String!
    name: String!
}

input NegotiableQuoteShippingAddressInput {
    firstname: String! @doc(description: "The first name of the person associated with the billing address")
    lastname: String! @doc(description: "The family name of the person associated with the billing address")
    telephone: String! @doc(description: "The telephone number")
    street: [String]! @doc(description: "A list of strings that define the street number and name")
    city: String! @doc(description: "The city or town")
    region: String! @doc(description: "The region name")
    region_id: Int @doc(description: "The region ID")
    postcode: String! @doc(description: "The customer's ZIP or postal code")
    country_code: String! @doc(description: "The country code")
}

type ShippingMethodsOutput {
    carrier_code: String @doc(description: "Shipping carrier code")
    method_code: String @doc(description: "Shipping method code")
    carrier_title: String @doc(description: "Shiping carrier title")
    method_title: String @doc(description: "Shipping method title")
    amount: String @doc(description: "Shipping amount")
    base_amount: String @doc(description: "Shipping base amount")
    available: String @doc(description: "Shipping method availble")
    error_message: String @doc(description: "Shipping method error message")
    price_excl_tax: String @doc(description: "Shipping method price with exclusive tax")
    price_incl_tax: String @doc(description: "Shipping method price with inclusive tax")
}

type SetShippingMethodsOnNegotiableQuoteOutput {
    shipping_method_set: Boolean!
}
